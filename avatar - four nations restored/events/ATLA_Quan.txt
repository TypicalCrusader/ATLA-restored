#####                                          #####
##                                                ##
##     Events behind Clan Authority and Story     ##
##  Written for T4N - Restored by TypicalCrusader ##
##                                                ##
#####                                          #####

namespace = T4NQuan

###      ###
#Event List#
###      ###

#####
##T4NQuan.1 - Grant Trait princequan to new ruler
##T4NQuan.2 - Remove trait princequan if char is no longer a ruler of k_quan
##T4NQuan.3 - Check if CA is not < 0 / > 100 (yearly)
##T4NQuan.4 - Grant CA modifer based on current CA (yearly + startup)
##T4NQuan.5 - Assign tributes (startup)
##T4NQuan.6 - Clan Authority Yearly gain/loss (Yearly)
##T4NQuan.7 - Pre Scripted Mandate Revolt Event
##T4NQuan.8 - Five Banner Rebelion
##T4NQuan.9 - Declare Five Banners Rebelion
##T4NQuan.10 - World Event stating that revolt has started
##T4NQuan.11 - Coronation, Hou-Quan Narrative event (startup)
##T4NQuan.12 - Rebuild the Walls, (Hou-quan narrative 2 )
##T4NQuan.13 - Taming the Frontier, (Hou-Quan narrative 3)
##T4NQuan.14 - 
##T4NQuan.15 - 
##T4NQuan.16 - Strategist / Martial edu gain (Hou-Quans)
#####

#Grant Trait to new ruler
character_event = {
	id = T4NQuan.1
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		NOT = { trait = princequan }
		has_landed_title = k_quan
	}
	
	immediate = {
		#Default CA to 50 after previous ruler death
		set_variable = { which = global_Clanauthority value = 50 }
		add_trait = princequan
		
		clr_global_flag = CAgainblock
		clr_global_flag  = CAloseblock
	}
}

#Remove trait if char is no longer a ruler of k_quan
character_event = {
	id = T4NQuan.2
	is_triggered_only = yes
	hide_window = yes	
	
	trigger = {
		trait = princequan
		NOT = { has_landed_title = k_quan }
	}	
	
	immediate = { 
		remove_trait = princequan
	}
}

#Check if CA is not < 0  / > 100 (yearly)
character_event = {
	id = T4NQuan.3
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		has_landed_title = k_quan
	}
	
	immediate = {
		#if CA > 100 then set it to 100 and block any gain
		if = {
			limit = {
				check_variable = { which = global_Clanauthority value > 100 }
			}
			set_variable = { which = global_Clanauthority value = 0 }
			set_global_flag = CAgainblock
		}
		#if CA < 0 then set it to 0 and block any lose
		else_if = {
			limit = {
				check_variable = { which = global_Clanauthority value < 0 }
			}		
			set_variable = { which = global_Clanauthority value = 0 }
			set_global_flag = CAloseblock
		}
		if = {
			limit = {
				has_global_flag = CAgainblock
				check_variable = { which = global_Clanauthority value <= 95 }
			}
			clr_global_flag = CAgainblock
		}
		else_if = {
			limit = {
				has_global_flag = CAloseblock
				check_variable = { which = global_Clanauthority value >= 5 }
			}
			clr_global_flag = CAloseblock
		}
	}
}

#Grant CA modifer based on current CA (yearly + startup)
character_event = {
	id = T4NQuan.4
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		has_landed_title = k_quan
	}

	immediate = {
		quan_gib_ca_modifier_effect = yes
	}
}

character_event = {
	id = T4NQuan.5
	only_rulers = yes
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		is_save_game = no
	}

	immediate = {
		#any_independent_ruler = {
		if = {	
			limit = {
				capital_scope = {
					region = world_dongfang_peninsular
				}
				is_tribal = yes
				rebel = no
				independent = yes
				NOT = { has_character_flag = LowCARevolter }
			}
			suzerain = {
				remove_tributary = PREV
			}			
			k_quan = {
				owner = {
					make_tributary = {
						who = ROOT
						percentage = 0.2
						tributary_type = quan_tributary
					}
				}
			}
		}
	}
}

character_event = {
	id = T4NQuan.6 
	is_triggered_only = yes
	only_rulers = yes

	picture = GFX_evt_chin_war
	desc = QuanYearlycheckdesc

	trigger = {
		has_landed_title = k_quan
		NOR = {
			has_global_flag = CAgainblock
			has_global_flag = CAloseblock
		}
	}

	immediate = {
	
		set_variable = { which = oldclanauthority which = global_Clanauthority }
		set_variable = { which = CA_lawgain value = 0 }
		set_variable = { which = CA_mileducationgain value = 0 }
		set_variable = { which = global_CA_randomgain value = 0 }
		set_variable = { which = CA_tributesgain value = 0 }

		ROOT = {

			#Tributaries
			any_tributary = {
				if = {
					limit = {
						is_tributary = {
							type = quan_tributary
						}				
					}
					change_variable = { which = CA_tributesgain value = 1 }
				}
			}

			#Military education Traits + Strategist trait 
			trigger_switch = {
				on_trigger = trait

				misguided_warrior = { change_variable = { which = CA_mileducationgain value = 0.5 } }
				tough_soldier = { change_variable = { which = CA_mileducationgain value = 1 } }
				skilled_tactician = { change_variable = { which = CA_mileducationgain value = 1.5 } }
				brilliant_strategist = { change_variable = { which = CA_mileducationgain value = 2 } }
			}

			trigger_switch = {
				on_trigger = trait

				strong = { change_variable = { which = CA_mileducationgain value = 1 } }
				weak = { change_variable = { which = CA_mileducationgain value = -1 } }
			}

			if = {
				limit = {
					NOR = {
						trait = misguided_warrior
						trait = tough_soldier
						trait = skilled_tactician 
						trait = brilliant_strategist
					}
				}
				change_variable = { which = CA_mileducationgain value = -1 }
			}

			if = {
				limit = {
					trait = strategist
				}
				change_variable = { which = CA_mileducationgain value = 1.5 }
			}

			#TODO:Laws go here, when they will be done
		}
		
		
		
		change_variable = { which = global_Clanauthority which = CA_tributesgain }
		change_variable = { which = global_Clanauthority which = CA_mileducationgain }
		change_variable = { which = global_Clanauthority which = CA_lawgain }
		change_variable = { which = global_Clanauthority which = global_CA_randomgain }
			
		set_variable = { which = CAgain which = global_Clanauthority }
		subtract_variable = { which = CAgain which = oldclanauthority }

		if = {
			limit = {
				OR = {
					check_variable = { which = global_Clanauthority value > 100 }
					check_variable = { which = global_Clanauthority value < 0 } 
				}
			}
			if = {
				limit = {
					check_variable = { which = global_Clanauthority value > 100 }
				}
				character_event = { id = T4NQuan.3 }
			}
			if = {
				limit = {
					check_variable = { which = global_Clanauthority value < 0 }					
				}
				character_event = { id = T4NQuan.3 }
			}
		}

	}

	option = {
		name = QuanYearlycheckopt
		custom_tooltip = {
			text = QuanYearlycheck
		}
	}
}

#Pre Scripted Mandate Revolt Event
narrative_event = {
	id = T4NQuan.7
	only_rulers = yes
	is_triggered_only = yes
	
	picture = GFX_evt_suspicious_noble
	border = GFX_event_narrative_frame_intrigue
	title = QuanPreRevoltEvtTit
	desc = QuanPreRevoltEvtDesc

	trigger = {
		has_landed_title = k_quan
		k_quan = {	
			OR = {
				AND = {
					has_law = quan_army_5
					has_law = quan_council_4
					has_law = quan_admin_3
				}
				AND = {
					has_law = quan_army_5
					has_law = quan_council_6
					#TODO:after testing add all other conclave council law
				}
			}
		}
	}

	immediate = {
		character_event = { id = T4NQuan.8 years = 1 }
	}

	option = {
		name = QuanPreRevoltEvtOpt
		custom_tooltip = {
			text = Quan_alea_iacta_est
			hidden_tooltip = {
				set_global_flag = Quan_the_die_is_cast
			}
		}
	}
}

#Five Banners revolt
#T h i c c 

narrative_event = {
	id = T4NQuan.8
	is_triggered_only = yes
	only_rulers = yes
	#picture = GFX_evt_china_unrest
	picture = GFX_evt_burning_castle_hf
	title = QuanFiveBannersTit
	desc = QuanFiveBannersDesc
	
	trigger = {
		has_global_flag = Quan_the_die_is_cast
		has_landed_title = k_quan
	}
	
	immediate = {
		change_variable = { which = global_Clanauthority value = -15 }
		if = {
			limit = {
				check_variable = { which = global_Clanauthority value < 0 }
			}
			character_event = { id = T4NQuan.3 }
		}
		c_tanghua = {
			holder_scope = {
				save_event_target_as = Quan_Five_Banners_leader
			}
		}
	}
	
	option = {
		name = QuanFiveBannersOpt
		custom_tooltip = {
			text = Quan_rebelion_begins
			hidden_tooltip = {
				c_nayong = {
					holder_scope = {
						set_character_flag = Quan_Five_banners_member
					}
				}
				c_qijing = {
					holder_scope = {
						set_character_flag = Quan_Five_banners_member
					}
				}
				c_jejin = {
					holder_scope = {
						set_character_flag = Quan_Five_banners_member
					}
				}
				c_tangong = {
					holder_scope = {
						set_character_flag = Quan_Five_banners_member
					}
				}
				c_tanghua = {
					holder_scope = {
						set_character_flag = Quan_Five_banners_member
						set_character_flag = Quan_Five_banners_Leader
						event_target:Quan_Five_Banners_leader = {
							character_event = { id = T4NQuan.9 }
						}
					}	
				}				
			}				
		}
	}
}

character_event = {
	id = T4NQuan.9
	is_triggered_only = yes
	only_rulers = yes
	hide_window = yes
	
	
	trigger = {
		has_character_flag = Quan_Five_banners_Leader
		has_global_flag = Quan_the_die_is_cast
	}
	
	immediate = {
		ROOT = {
			k_quan = {
				remove_tributary = ROOT
			}
			primary_title = {
				holder_scope = {
					activate_title = { title = k_five_banners status = yes }
					grant_title = k_five_banners
				}
			}
			k_five_banners = {
				holder_scope = {
					copy_title_laws = PREV
					copy_title_history = PREV			
					#o h  b o i now you are fucked
					spawn_unit = {
						owner = ROOT
						province = ROOT
						home = ROOT			
						
						troops = {
							archers = { 1000 1000 }
							light_infantry = { 1500 1500 }
							light_cavalry = { 2500 2500 }
						}

						attrition = 1.0
						disband_on_peace = yes
						maintenance_multiplier = 0.5
					}						
				}
			}	
		}
		any_playable_ruler = {
			limit = {
				culture = dongfangian
				has_character_flag = Quan_Five_banners_member
				NOT = { has_character_flag = Quan_Five_banners_Leader }
			}
			k_quan = {
				remove_tributary = PREV
			}
			primary_title = {
				set_defacto_liege = ROOT
			}
		}
		k_quan = {
			holder_scope = {
				reverse_war = {
					target = PREV
					casus_belli = Quan_scripted_revolt_cb
				}
			}
		}
	}
	
	option = {
		any_playable_ruler = {
			limit = {
				ai = no
			}
			set_global_flag = WorldState_QuanFiveBannerRebelion
			clr_global_flag = Quan_the_die_is_cast
			narrative_event = { id = T4NQuan.10 }
		}
	}	
}

narrative_event = {
	id = T4NQuan.10
	is_triggered_only = yes
	only_rulers = yes
	ai = no
	picture = GFX_evt_china_unrest
	title = QuanFiveBannersWorldTit
	desc = QuanFiveBannersWorldDesc
	#frame =
	
	trigger = {
		has_global_flag = WorldState_QuanFiveBannerRebelion
	}
	
	option = {
		trigger = {
			has_landed_title = k_quan
		}
		name = QuanRebelionPrinceReaction
	}
	
	option = {
		trigger = {
			OR = {
				has_landed_title = k_five_banners
				vassal_of = k_five_banners
			}
		}
		name = QuanRebelionRebelReaction
	}
	
	option = {
		trigger = {
			has_landed_title = e_earth_kingdom
			OR = {
				dynasty = 1366 #Hou-Ting
				dynasty = 3972 #Hou
				dynasty = 3971 #Hao
			}
		}
		name = QuanRebelionEKReaction
		hidden_tooltip = {
			narrative_event = { id = T4NQuan.11 }
		}		
	}

	option = {
		trigger = {
			NOR = {
				AND = {
					has_landed_title = e_earth_kingdom
					OR = {
						dynasty = 1366 #Hou-Ting
						dynasty = 3972 #Hou
						dynasty = 3971 #Hao
					}
				}
				OR = {
					has_landed_title = k_five_banners
					vassal_of = k_five_banners
				}
				has_landed_title = k_quan
			}
		}
		name = QuanRebelionWorldReaction
	}
}

#coronation of the prince		
narrative_event = {
	id = T4NQuan.11
	is_triggered_only = yes
	only_rulers = yes
	title = QuanHouQuanNarrativeTit1
	desc = QuanHouQuanNarrativeDesc1
	picture = GFX_evt_coronation_cm
	
	trigger = {
		character = c_60009 #sorry kids scripted linear chain time
		NOT = { has_character_flag = Quan_narrative_chain_start }
		has_landed_title = k_quan
	}
	
	option = { #Let My Rule Begin
		name = QuanHouQuanNarrativeOpt1a
		set_character_flag = Quan_narrative_chain_start
		narrative_event = { id = T4NQuan.12 years = 2 random = 120 }
		prestige = 50
	}
		
}


#Rebuilding the walls
narrative_event = {
	id = T4NQuan.12
	is_triggered_only = yes
	only_rulers = yes
	title = QuanHouQuanNarrativeTit2
	desc = QuanHouQuanNarrativeDesc2
	#picture = 
	
	trigger = {
		character = c_60009 #sorry kids scripted linear chain time
		has_landed_title = k_quan
	}
	
	option = { #Rebuild Them
		name = QuanHouQuanNarrativeOpt2a
		narrative_event = { id = T4NQuan.13 years = 2 random = 120 }
		treasury = -450
		prestige = 150
		b_crouching_tiger = {
			add_building = militia_barracks_4
			add_building = quan_walls_4
		}
		custom_tooltip = {
			text = QuanNextYearCAGain5
			hidden_tooltip = {	
				change_variable = { which = global_CA_randomgain value = 5 }
			}
		}
	}
	
	option = { #we dont need them
		name = QuanHouQuanNarrativeOpt2b
		narrative_event = { id = T4NQuan.13 years = 2 random = 120 }
		custom_tooltip = {
			text = QuanNextYearCALoss10
			hidden_tooltip = {	
				change_variable = { which = global_CA_randomgain value = -10 }
			}
		}		
	}
}

#Taming the Frontier (Hou-Quan narrative 3)
narrative_event = {
	id = T4NQuan.13
	is_triggered_only = yes
	only_rulers = yes
	title = QuanHouQuanNarrativeTit3
	desc = QuanHouQuanNarrativeDesc3
	#picture = 
	
	trigger = {
		character = c_60009 #sorry kids scripted linear chain time
		has_landed_title = k_quan
	}
	
	option = { #allow colonisation
		name = QuanHouQuanNarrativeOpt3a
		custom_tooltip = {
			text = Quan_clan_dislike_warn
			hidden_tooltip = {
				any_tributary = {
					opinion = {
						modifier = opinion_deeply_insulted
						who = ROOT
						years = 10
					}
				}
				set_global_flag = Quan_colonisation_allowed
				narrative_event = { id = T4NQuan.14 years = 2 random = 120 }
			}
		}
	}
	
	option = { #dissallow it 
		name = QuanHouQuanNarrativeOpt3b
		custom_tooltip = {
			text = Quan_clan_like
			hidden_tooltip = {
				any_tributary = {
					opinion = {
						modifier = opinion_reasonable
						who = ROOT
						years = 10
					}
				}
				set_global_flag = Quan_colonisation_disallowed
				narrative_event = { id = T4NQuan.14 years = 2 random = 120 }
			}
		}
	}
}


	
#Strategist / Martial edu gain (Hou-Quans)
narrative_event = {
	id = T4NQuan.16
	is_triggered_only = yes
	title = QuanHouQuanBloodStratTit
	desc = QuanHouQuanBloodStratDesc
	picture = GFX_evt_china_invades
	
	trigger = {
		any_owned_bloodline = {
			has_bloodline_flag = hou_quan
		}
		OR = {
			trait = misguided_warrior
			trait = tough_soldier
			trait = skilled_tactician
			trait = brilliant_strategist
		}
		NOT = { has_character_flag = Quan_edu_strat_event_fired }
	}
	
	option = {
		name = QuanHouQuanBloodStratOpt
		custom_tooltip = {
			text = Quan_swiggity_swooty
			hidden_tooltip = {
				random_list = {
					50 = { #you can get better education!
						if = {
							limit = {
								trait = misguided_warrior
							}
							random_list = {
								75 = {
									remove_trait = misguided_warrior
									add_trait = tough_soldier
									set_character_flag = Quan_edu_strat_event_fired
								}
								25 = { 
									set_character_flag = Quan_edu_strat_event_fired
								}
							}
							break = yes
						}
						if = {
							limit = {
								trait = tough_soldier
							}
							random_list = {
								50 = { 
									remove_trait = tough_soldier
									add_trait = skilled_tactician	
									set_character_flag = Quan_edu_strat_event_fired
								}
								50 = { set_character_flag = Quan_edu_strat_event_fired }
							}
							break = yes
						}
						if = {
							limit = {
								trait = skilled_tactician
							}
							random_list = {
								25 = { 
									remove_trait = skilled_tactician
									add_trait = brilliant_strategist	
									set_character_flag = Quan_edu_strat_event_fired
								}
								75 = { set_character_flag = Quan_edu_strat_event_fired  }
							}
							break = yes
						}
						if = { #special cases
							limit = {
								trait = brilliant_strategist
								NOT = { trait = strategist }
							}
							random_list = {
								75 = { 
									add_trait = strategist
									set_character_flag = Quan_edu_strat_event_fired
								}
								25 = { set_character_flag = Quan_edu_strat_event_fired }
							}
							break = yes
						}
						if = {
							limit = {
								trait = brilliant_strategist
								trait = strategist 
							}
							random_list = {
								60 = { 
									martial = 1 
									set_character_flag = Quan_edu_strat_event_fired
								}
								20 = { 
									martial = 2
									set_character_flag = Quan_edu_strat_event_fired
								}
								20 = { set_character_flag = Quan_edu_strat_event_fired }
							}
							break = yes
						}
					}
					50 = { #you can get strategist trait!
						random_list = {
							50 = {
								add_trait = strategist
								set_character_flag = Quan_edu_strat_event_fired
							}
							50 = { set_character_flag = Quan_edu_strat_event_fired }
						}	
					}
				}
			}
		}
	}
}

character_event = {
	id = T4NQuan.17
	is_triggered_only = yes
	only_rulers = yes
	hide_from = yes
	desc = QuanColonisation
	picture = GFX_evt_powerful_tower_wol
	
	trigger = {
		has_landed_title = k_quan
	}
	
	option = {
		name = QuanChoosenCastle
		
		event_target:Quan_colonised_prov = {
			location = {
				build_holding = {
					type = castle
					holder = ROOT
				}
			}
		}
	}

	option = {
		name = QuanChoosenCity
		
		event_target:Quan_colonised_prov = {
			location = {
				build_holding = {
					type = city
					holder = ROOT
				}
			}
		}
	}
}		

	
#Random gain events